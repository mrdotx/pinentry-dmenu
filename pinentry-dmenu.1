.TH "PINENTRY-DMENU" "1" "" "Version-VERSION" "pinentry-dmenu Manual"
.SH NAME
pinentry-dmenu - a pinentry program based on dmenu
.SH SYNOPSIS
Set the \f[B]pinentry-program\f[R] in
\f[I]\[ti]/.gnupg/gpg-agent.conf\f[R] to \f[B]pinentry-dmenu\f[R] to use
the program as the regular dialog for \f[B]gpg-agent\f[R].
.PP
The configuration is placed in
\f[I]\[ti]/.gnupg/pinentry-dmenu.conf\f[R].
You can change the path to the config file with the environment variable
\f[I]GNUPGHOME\f[R].
.SH DESCRIPTION
\f[B]pinentry-dmenu\f[R] is a dmenu- and pinentry-based passphrase
dialog called from the \f[B]gpg-agent\f[R](1) daemon.
It is not intended to be invoked directly.
.SH OPTIONS
.TP
\f[B]monitor\f[R] = \f[I]-1\f[R]
pinentry-dmenu is displayed on the monitor number supplied.
Monitor numbers are starting from 0.
Value -1 for focused monitor.
.TP
\f[B]center_width\f[R] = \f[I]1024\f[R]
Defines the width for the `center' menu.
Value -1 for full width.
.TP
\f[B]embedded\f[R] = \f[I]false\f[R]
Embed into window.
.TP
\f[B]line_height\f[R] = \f[I]25\f[R]
Defines menu line of at least `line_height' pixels tall.
.TP
\f[B]border_width\f[R] = \f[I]1\f[R]
Defines the border width for the menu.
.TP
\f[B]min_password_length\f[R] = \f[I]32\f[R]
The minimal space of the password field.
This value has affect to the description field after the password field.
.TP
\f[B]prompt_fg_alpha\f[R] = \f[I]255\f[R]
Defines the prompt foreground alpha value.
Values between \f[I]0\f[R] (transparent) and \f[I]255\f[R] (opaque) are
supported.
.TP
\f[B]prompt_bg_alpha\f[R] = \f[I]255\f[R]
Defines the prompt background alpha value.
.TP
\f[B]normal_fg_alpha\f[R] = \f[I]255\f[R]
Defines the normal foreground alpha value.
.TP
\f[B]normal_bg_alpha\f[R] = \f[I]230\f[R]
Defines the normal background alpha value.
.TP
\f[B]select_fg_alpha\f[R] = \f[I]255\f[R]
Defines the selected foreground alpha value.
.TP
\f[B]select_bg_alpha\f[R] = \f[I]255\f[R]
Defines the selected background alpha value.
.TP
\f[B]desc_fg_alpha\f[R] = \f[I]255\f[R]
Defines the description foreground alpha value.
.TP
\f[B]desc_bg_alpha\f[R] = \f[I]255\f[R]
Defines the description background alpha value.
.TP
\f[B]position\f[R] = \f[I]\[lq]center\[rq]\f[R]
Defines the position of the menu.
\f[I]bottom\f[R], \f[I]center\f[R] and \f[I]top\f[R] are supported.
.TP
\f[B]font\f[R] = \f[I]\[lq]DejaVuSansM Nerd Font Mono:pixelsize=16\[rq]\f[R]
Defines the font or font set used.
.TP
\f[B]prompt\f[R] = \f[I]\[lq]\[lq]\f[R]
Defines the prompt to be displayed to the left of the input field.
.TP
\f[B]asterisk\f[R] = \f[I]\[lq]*\[rq]\f[R]
Defines the symbol which is showed for each typed character.
.TP
\f[B]prompt_fg\f[R] = \f[I]\[lq]#cccccc\[rq]\f[R]
Defines the prompt foreground color.
\f[I]#RGB\f[R], \f[I]#RRGGBB\f[R] and X color names are supported.
.TP
\f[B]prompt_bg\f[R] = \f[I]\[lq]#4185d7\[rq]\f[R]
Defines the prompt background color.
.TP
\f[B]normal_fg\f[R] = \f[I]\[lq]#cccccc\[rq]\f[R]
Defines the normal foreground color.
.TP
\f[B]normal_bg\f[R] = \f[I]\[lq]#000000\[rq]\f[R]
Defines the normal background color.
.TP
\f[B]select_fg\f[R] = \f[I]\[lq]#ffffff\[rq]\f[R]
Defines the selected foreground color.
.TP
\f[B]select_bg\f[R] = \f[I]\[lq]#4185d7\[rq]\f[R]
Defines the selected background color.
.TP
\f[B]desc_fg\f[R] = \f[I]\[lq]#cccccc\[rq]\f[R]
Defines the description foreground color.
.TP
\f[B]desc_bg\f[R] = \f[I]\[lq]#4185d7\[rq]\f[R]
Defines the description background color.
.SH USAGE
\f[B]pinentry-dmenu\f[R] is completely controlled by the keyboard.
.TP
\f[B]Return\f[R]
Confirm input
.TP
\f[B]Ctrl-Return\f[R]
Confirm input
.TP
\f[B]Shift-Return\f[R]
Confirm input
.TP
\f[B]Escape\f[R]
Cancel input
.TP
\f[B]C-c\f[R]
Escape
.PP
\f[B]\f[BI]Confirm Mode\f[B]\f[R]
.TP
\f[B]Down\f[R]
Right
.TP
\f[B]End\f[R]
Right
.TP
\f[B]Home\f[R]
Left
.TP
\f[B]Next\f[R]
Right
.TP
\f[B]Prior\f[R]
Left
.TP
\f[B]Up\f[R]
Left
.TP
\f[B]g\f[R]
Cancel input
.TP
\f[B]G\f[R]
Cancel input
.TP
\f[B]h\f[R]
Left
.TP
\f[B]j\f[R]
Left
.TP
\f[B]k\f[R]
Right
.TP
\f[B]l\f[R]
Right
.TP
\f[B]n\f[R]
Confirm with no
.TP
\f[B]N\f[R]
Confirm with no
.TP
\f[B]y\f[R]
Confirm with yes
.TP
\f[B]Y\f[R]
Confirm with yes
.PP
\f[B]\f[BI]Pin Mode\f[B]\f[R]
.TP
\f[B]End\f[R]
Move cursor to the line end
.TP
\f[B]Home\f[R]
Move cursor to the line begin
.TP
\f[B]C-a\f[R]
Home
.TP
\f[B]C-b\f[R]
Left
.TP
\f[B]C-d\f[R]
Delete
.TP
\f[B]C-e\f[R]
End
.TP
\f[B]C-f\f[R]
Right
.TP
\f[B]C-g\f[R]
Escape
.TP
\f[B]C-h\f[R]
Backspace
.TP
\f[B]C-k\f[R]
Delete line right
.TP
\f[B]C-u\f[R]
Delete line left
.TP
\f[B]C-v\f[R]
Paste from primary X selection
.SH EXAMPLES
.PP
monitor = -1;
.PD 0
.P
.PD
center_width = 1024;
.PD 0
.P
.PD
embedded = false;
.PD 0
.P
.PD
line_height = 25;
.PD 0
.P
.PD
border_width = 1;
.PD 0
.P
.PD
min_password_length = 32;
.PD 0
.P
.PD
prompt_fg_alpha = 255;
.PD 0
.P
.PD
prompt_bg_alpha = 255;
.PD 0
.P
.PD
normal_fg_alpha = 255;
.PD 0
.P
.PD
normal_bg_alpha = 230;
.PD 0
.P
.PD
select_fg_alpha = 255;
.PD 0
.P
.PD
select_bg_alpha = 255;
.PD 0
.P
.PD
desc_fg_alpha = 255;
.PD 0
.P
.PD
desc_bg_alpha = 255;
.PD 0
.P
.PD
position = \[lq]center\[rq];
.PD 0
.P
.PD
font = \[lq]DejaVuSansM Nerd Font:pixelsize=16\[rq];
.PD 0
.P
.PD
prompt = \[lq]\[lq];
.PD 0
.P
.PD
asterisk = \[lq]*\[rq];
.PD 0
.P
.PD
prompt_fg = \[lq]#cccccc\[rq];
.PD 0
.P
.PD
prompt_bg = \[lq]#4185d7\[rq];
.PD 0
.P
.PD
normal_fg = \[lq]#cccccc\[rq];
.PD 0
.P
.PD
normal_bg = \[lq]#000000\[rq];
.PD 0
.P
.PD
select_fg = \[lq]#ffffff\[rq];
.PD 0
.P
.PD
select_bg = \[lq]#4185d7\[rq];
.PD 0
.P
.PD
desc_fg = \[lq]#cccccc\[rq];
.PD 0
.P
.PD
desc_bg = \[lq]#4185d7\[rq];
.SH BUGS
See GitHub Issues:
\f[I]https://github.com/mrdotx/pinentry-dmenu/issues\f[R]
.SH AUTHORS
.PP
\f[B]pinentry-dmenu\f[R] is a fork of \f[B]dmenu\f[R]
<\f[I]https://tools.suckless.org/dmenu\f[R]> and uses the api of
\f[B]pinentry\f[R], a GnuPG tool.
.PD 0
.P
.PD
\f[B]pinentry-dmenu\f[R] was written by mrdotx
<\f[I]klassiker\[at]gmx.de\f[R]>
.SH SEE ALSO
\f[B]dmenu\f[R](1), \f[B]dwm\f[R](1), \f[B]gpg-agent\f[R](1)
.SH LICENSE
See the \f[I]LICENSE.md\f[R] file for the terms of redistribution.
